-- File generated by the BNF Converter (bnfc 2.9.5).

{-# LANGUAGE GeneralizedNewtypeDeriving #-}

-- | The abstract syntax of language bnfc.

module AbsBnfc where

import Prelude (Integer, String)
import qualified Prelude as C (Eq, Ord, Show, Read)
import qualified Data.String

data Program = Prog [Stmt]
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data Stmt = Assign Var Expr | Print Expr
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data Expr = EAdd Expr Term | ESub Expr Term | ESimp Term
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data Term = TMul Term Factor | TDiv Term Factor | TSimp Factor
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data Factor = FInt Integer | FVar Var | FPar Expr
  deriving (C.Eq, C.Ord, C.Show, C.Read)

newtype Integer = Integer String
  deriving (C.Eq, C.Ord, C.Show, C.Read, Data.String.IsString)

newtype Var = Var String
  deriving (C.Eq, C.Ord, C.Show, C.Read, Data.String.IsString)

